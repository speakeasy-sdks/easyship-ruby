# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Easyship
  module Operations
    # ListOrganizationCompaniesSortBy - Sort records by listed columns. Default: `created_at`
    class ListOrganizationCompaniesSortBy < T::Enum
      enums do
        COMPANY_NAME = new('company_name')
        CREATED_AT = new('created_at')
      end
    end


    # ListOrganizationCompaniesSortDirection - Set the sort direction. Default: `DESC`
    class ListOrganizationCompaniesSortDirection < T::Enum
      enums do
        ASC = new('ASC')
        DESC = new('DESC')
      end
    end



    class ListOrganizationCompaniesRequest < Easyship::Utils::FieldAugmented
      extend T::Sig

      # Organization ID provided when creating the organization
      field :organization_id, String, { 'path_param': { 'field_name': 'organization_id', 'style': 'simple', 'explode': false } }
      # Filter by company name
      field :company_name, T.nilable(String), { 'query_param': { 'field_name': 'company_name', 'style': 'form', 'explode': true } }
      # Filter by Easyship company ID
      field :easyship_company_id, T.nilable(String), { 'query_param': { 'field_name': 'easyship_company_id', 'style': 'form', 'explode': true } }
      # Filter by company owner's email
      field :owner_email, T.nilable(String), { 'query_param': { 'field_name': 'owner_email', 'style': 'form', 'explode': true } }
      # Sort records by listed columns. Default: `created_at`
      field :sort_by, T.nilable(Operations::ListOrganizationCompaniesSortBy), { 'query_param': { 'field_name': 'sort_by', 'style': 'form', 'explode': true } }
      # Set the sort direction. Default: `DESC`
      field :sort_direction, T.nilable(Operations::ListOrganizationCompaniesSortDirection), { 'query_param': { 'field_name': 'sort_direction', 'style': 'form', 'explode': true } }


      sig { params(organization_id: String, company_name: T.nilable(String), easyship_company_id: T.nilable(String), owner_email: T.nilable(String), sort_by: T.nilable(Operations::ListOrganizationCompaniesSortBy), sort_direction: T.nilable(Operations::ListOrganizationCompaniesSortDirection)).void }
      def initialize(organization_id: nil, company_name: nil, easyship_company_id: nil, owner_email: nil, sort_by: nil, sort_direction: nil)
        @organization_id = organization_id
        @company_name = company_name
        @easyship_company_id = easyship_company_id
        @owner_email = owner_email
        @sort_by = sort_by
        @sort_direction = sort_direction
      end
    end


    class ListOrganizationCompaniesResponse < Easyship::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # HTTP response status code for this operation
      field :status_code, Integer
      # company list
      field :company_list, T.nilable(T::Hash[Symbol, Object])
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, T.nilable(Faraday::Response)


      sig { params(content_type: String, status_code: Integer, company_list: T.nilable(T::Hash[Symbol, Object]), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, company_list: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @company_list = company_list
        @raw_response = raw_response
      end
    end
  end
end
