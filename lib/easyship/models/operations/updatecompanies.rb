# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/companyupdate'
require_relative '../shared/error'
require_relative '../shared/company_single'

module EasyshipApi
  module Operations

    class UpdateCompaniesRequest < EasyshipApi::Utils::FieldAugmented
      extend T::Sig

      # Easyship company ID provided when creating the account
      field :easyship_company_id, String, { 'path_param': { 'field_name': 'easyship_company_id', 'style': 'simple', 'explode': false } }

      field :company_update, T.nilable(Shared::CompanyUpdate), { 'request': { 'media_type': 'application/json' } }


      sig { params(easyship_company_id: String, company_update: T.nilable(Shared::CompanyUpdate)).void }
      def initialize(easyship_company_id: nil, company_update: nil)
        @easyship_company_id = easyship_company_id
        @company_update = company_update
      end
    end


    class UpdateCompaniesResponse < EasyshipApi::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # HTTP response status code for this operation
      field :status_code, Integer
      # company successfully updated
      field :company_single, T.nilable(Shared::CompanySingle)
      # invalid params
      field :error, T.nilable(Shared::Error)
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, T.nilable(Faraday::Response)


      sig { params(content_type: String, status_code: Integer, company_single: T.nilable(Shared::CompanySingle), error: T.nilable(Shared::Error), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, company_single: nil, error: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @company_single = company_single
        @error = error
        @raw_response = raw_response
      end
    end
  end
end
