# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Easyship
  module Shared
  
    # OAuth 2 Introspect Response
    class OAuth2IntrospectResponse < ::Easyship::Utils::FieldAugmented
      extend T::Sig


      field :active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('active') } }
      # OAuth 2 Client ID
      field :client_id, T.nilable(::String), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('client_id') } }
      # Easyship Company ID
      field :easyship_company_id, T.nilable(::String), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('easyship_company_id') } }

      field :exp, T.nilable(::Integer), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('exp') } }

      field :iat, T.nilable(::Integer), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('iat') } }

      field :platform, T.nilable(::Easyship::Shared::Platform), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('platform') } }
      # OAuth 2 Scopes separated by space. All Enterprise and Public API scopes are supported, but they must be allowed on the Enterprise API Client Application on the Dashboard.
      field :scope, T.nilable(::String), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('scope') } }
      # OAuth 2 Token Type
      field :token_type, T.nilable(::Easyship::Shared::TokenType), { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('token_type'), 'decoder': Utils.enum_from_string(::Easyship::Shared::TokenType, true) } }


      sig { params(active: T.nilable(T::Boolean), client_id: T.nilable(::String), easyship_company_id: T.nilable(::String), exp: T.nilable(::Integer), iat: T.nilable(::Integer), platform: T.nilable(::Easyship::Shared::Platform), scope: T.nilable(::String), token_type: T.nilable(::Easyship::Shared::TokenType)).void }
      def initialize(active: nil, client_id: nil, easyship_company_id: nil, exp: nil, iat: nil, platform: nil, scope: nil, token_type: nil)
        @active = active
        @client_id = client_id
        @easyship_company_id = easyship_company_id
        @exp = exp
        @iat = iat
        @platform = platform
        @scope = scope
        @token_type = token_type
      end
    end
  end
end
