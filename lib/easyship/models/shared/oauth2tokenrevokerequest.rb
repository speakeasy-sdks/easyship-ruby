# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/grant_type'

module OpenApiSDK
  module Shared
    # OAuth 2 Token Revoke Request
    class OAuth2TokenRevokeRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # OAuth 2 Client ID
      field :client_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('client_id') } }
      # OAuth 2 Client Secret
      field :client_secret, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('client_secret') } }
      # OAuth 2 Grant Type
      field :grant_type, Shared::GrantType, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('grant_type'), 'decoder': Utils.enum_from_string(Shared::GrantType, false) } }
      # OAuth 2 Access Token
      field :token, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('token') } }


      sig { params(client_id: String, client_secret: String, grant_type: Shared::GrantType, token: String).void }
      def initialize(client_id: nil, client_secret: nil, grant_type: nil, token: nil)
        @client_id = client_id
        @client_secret = client_secret
        @grant_type = grant_type
        @token = token
      end
    end
  end
end
