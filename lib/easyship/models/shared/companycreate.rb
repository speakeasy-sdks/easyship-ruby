# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Easyship
  module Shared
  

    class CompanyCreate < ::Easyship::Utils::FieldAugmented
      extend T::Sig

      # Country Code in Alpha-2 format (ISO 3166-1)
      field :country_alpha2, ::Easyship::Shared::CountryAlpha2, { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('country_alpha2'), 'decoder': Utils.enum_from_string(::Easyship::Shared::CountryAlpha2, false) } }
      # Company name
      field :name, ::String, { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('name') } }
      # Organization ID
      field :organization_id, ::String, { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('organization_id') } }

      field :owner, ::Easyship::Shared::CompanyUserCreate, { 'format_json': { 'letter_case': ::Easyship::Utils.field_name('owner') } }


      sig { params(country_alpha2: ::Easyship::Shared::CountryAlpha2, name: ::String, organization_id: ::String, owner: ::Easyship::Shared::CompanyUserCreate).void }
      def initialize(country_alpha2: nil, name: nil, organization_id: nil, owner: nil)
        @country_alpha2 = country_alpha2
        @name = name
        @organization_id = organization_id
        @owner = owner
      end
    end
  end
end
